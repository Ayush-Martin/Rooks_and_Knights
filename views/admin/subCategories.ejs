<!DOCTYPE html>
<html lang="en">

<%- include('./partials/header') %>

    <body style="height: auto !important;">
        <div class="wrapper">
            <%- include('./partials/slidebar') %>

                <div id="content" class="container-fluid">
                    <h1 class="m-b-10 admin_title">Sub Categories</h1>
                    <div class="container p-b-50">
                        <div class="search-bar-container">
                            <!-- Search Form -->
                            <form action="/admin/subCategories" method="GET" class="search-input-group">
                                <input type="text" id="search-input" name="search" class="form-control search-input"
                                    placeholder="<%= searchFilter || " search"%>">
                                <a href="/admin/subCategories?search=">
                                    <button type="button" class="btn-clear" id="clear-btn">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </a>
                                <button type="submit" class="btn-search">
                                    <i class="fas fa-search"></i>
                                </button>
                            </form>

                        </div>

                        <button class="btn-add" data-toggle="modal" data-target="#addSubCategoryModel">
                            <i class="fas fa-plus"></i> New SubCategory
                        </button>



                    </div>

                    <div class="table-responsive">

                        <table class="table table-bordered m-t-10">
                            <thead>
                                <tr>
                                    <th>SubCategory Name</th>
                                    <th>SubCategory Description</th>
                                    <th></th>
                                    <th></th>

                                </tr>
                            </thead>
                            <tbody>
                                <% subCategoryList.forEach(subCategory=> { %>
                                    <tr>
                                        <td>
                                            <%= subCategory.subCategoryName %>
                                        </td>
                                        <td>
                                            <%= subCategory.subCategoryDescription %>
                                        </td>
                                        <td><button class="btn btn-dark btn-sm" type="submit"
                                                data-subCategory-item="<%= JSON.stringify(subCategory)%>"
                                                onclick="editSubCategoryModel(event,'<%=subCategory._id%>')"
                                                data-toggle="modal" data-target="#editSubCategoryModel">
                                                <i class="fas fa-pencil-alt"></i></button>
                                        </td>
                                        <td>
                                            <button class="btn btn-danger btn-sm"><i class="fa fa-trash"
                                                    onclick="removeCateogry('<%=subCategory._id%>')"></i>
                                            </button>
                                        </td>
                                    </tr>
                                    <% }) %>
                            </tbody>
                        </table>
                    </div>
                    <div class="flex-c-m flex-w w-full p-t-45 gap-10">
                        <!-- Previous Button -->
                        <a href="/admin/subCategories?search=<%= searchFilter %>&&page=<%= (currentPage>1)? Number(currentPage)-1:1 %>"
                            class="m-r-20 text-dark">
                            <i class="fas fa-chevron-left"></i> Previous
                        </a>
                        <P class="m-r-20 text-dark">page : <%= currentPage %> of <%= Math.ceil(totalNoOfPages) %></P>
                        <!-- Next Button -->
                        <a href="/admin/subCategories?search=<%= searchFilter %>&&page=<%= (currentPage<totalNoOfPages)? Number(currentPage)+1:currentPage %>"
                            class=" text-dark">
                            Next <i class="fas fa-chevron-right"></i>
                        </a>

                    </div>

                </div>



                <!-- modal to add new SubCategory -->
                <div class="modal fade m-t-50" id="addSubCategoryModel" tabindex="-2" role="dialog">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">New subCategory</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <form>
                                    <div class="form-group">
                                        <label for="subCategoryName" class="col-form-label">SubCategory Name</label>
                                        <input type="text" class="form-control" id="subCategoryName">
                                    </div>
                                    <div class="form-group">
                                        <label for="subCategoryDescription" class="col-form-label">Cateogry
                                            Description</label>
                                        <input type="text" class="form-control" id="subCategoryDescription">
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary"
                                    onclick="addSubCategory(event)">Add</button>
                            </div>
                        </div>
                    </div>
                </div>



                <!-- modal to edit subCategory -->
                <div class="modal fade m-t-50" id="editSubCategoryModel" tabindex="-2" role="dialog">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Edit SubCategory</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <form>
                                    <div class="form-group">
                                        <label for="subCategoryNameEdit" class="col-form-label">SubCategory Name</label>
                                        <input type="text" class="form-control" id="subCategoryNameEdit">
                                    </div>
                                    <div class="form-group">
                                        <label for="subCategoryDescriptionEdit" class="col-form-label">SubCategory
                                            Description</label>
                                        <input type="text" class="form-control" id="subCategoryDescriptionEdit">
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer" id="editsubCategoryDiv">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>



                <%- include('./partials/footer') %>
                    <script src="/public/JS/checkCategorySubcategoryValid.js"></script>
                    <script>
                        function editsubCategory(ID) {

                        }
                    </script>
                    <script>
                        function addSubCategory(event) {
                            event.preventDefault()
                            const subCategoryName = document.getElementById('subCategoryName').value;
                            const subCategoryDescription = document.getElementById('subCategoryDescription').value;
                            let error = checkCategorySubCategoryValid(subCategoryName, subCategoryDescription)
                            if (error) {
                                Swal.fire({
                                    icon: "error",
                                    title: "Validation Error",
                                    text: error,
                                });
                                return
                            }
                            fetch('/admin/subCategories', {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ subCategoryName, subCategoryDescription })
                            })
                                .then(res => res.json())
                                .then((data) => {
                                    if (data.validationError) {
                                        let timerInterval;
                                        Swal.fire({
                                            title: "Validation Error",
                                            html: "You will be redirected to login in <b></b> milliseconds.",
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: () => {
                                                Swal.showLoading();
                                                const timer = Swal.getPopup().querySelector("b");
                                                timerInterval = setInterval(() => {
                                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                                }, 100);
                                            },
                                            willClose: () => {
                                                clearInterval(timerInterval);
                                            }
                                        }).then((result) => {
                                            /* Read more about handling dismissals below */
                                            if (result.dismiss === Swal.DismissReason.timer) {
                                                
                                                window.location.href = data.redirectUrl;
                                            }
                                        });
                                    }

                                    if (data.success) {
                                        const Toast = Swal.mixin({
                                            toast: true,
                                            position: "top-end",
                                            showConfirmButton: false,
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: (toast) => {
                                                toast.onmouseenter = Swal.stopTimer;
                                                toast.onmouseleave = Swal.resumeTimer;
                                            }
                                        });
                                        Toast.fire({
                                            icon: "success",
                                            title: `new subCategory ${subCategoryName} added`
                                        });
                                        setTimeout(() => {
                                            window.location.reload()
                                        }, 2000)

                                    }

                                    if (data.error) {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Validation Error",
                                            text: data.error,
                                        });
                                    }
                                })
                        }

                        function editSubCategoryModel(e, _id) {

                            const subCategorydata = e.target.closest('button');
                            const { subCategoryName, subCategoryDescription } = JSON.parse(subCategorydata.getAttribute('data-subCategory-item'));

                            document.getElementById('subCategoryNameEdit').value = subCategoryName;
                            document.getElementById('subCategoryDescriptionEdit').value = subCategoryDescription;

                            // Get the parent div where the button should be appended
                            const editsubCategoryDiv = document.getElementById('editsubCategoryDiv');

                            // Check if the edit button already exists
                            if (!document.getElementById('editsubCategoryButton')) {
                                var editButton = document.createElement('button');
                                editButton.textContent = "Edit";
                                editButton.id = 'editsubCategoryButton';
                                editButton.onclick = () => editSubCategory(event, _id);
                                editButton.classList.add('btn', 'btn-primary');

                                editsubCategoryDiv.appendChild(editButton);
                            }
                        }


                        function editSubCategory(event, ID) {

                            event.preventDefault();
                            const subCategoryName = document.getElementById('subCategoryNameEdit').value;
                            const subCategoryDescription = document.getElementById('subCategoryDescriptionEdit').value;
                            let error = checkCategorySubCategoryValid(subCategoryName, subCategoryDescription)
                            if (error) {
                                Swal.fire({
                                    icon: "error",
                                    title: "Validation Error",
                                    text: error,
                                });
                                return
                            }
                            fetch(`/admin/subCategories/${ID}`, {
                                method: "PUT",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ subCategoryName, subCategoryDescription })
                            })
                                .then(res => res.json())
                                .then((data) => {
                                    if (data.validationError) {
                                        let timerInterval;
                                        Swal.fire({
                                            title: "Validation Error",
                                            html: "You will be redirected to login in <b></b> milliseconds.",
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: () => {
                                                Swal.showLoading();
                                                const timer = Swal.getPopup().querySelector("b");
                                                timerInterval = setInterval(() => {
                                                    timer.textContent = `${Swal.getTimerLeft()}`;
                                                }, 100);
                                            },
                                            willClose: () => {
                                                clearInterval(timerInterval);
                                            }
                                        }).then((result) => {
                                            /* Read more about handling dismissals below */
                                            if (result.dismiss === Swal.DismissReason.timer) {
                                                
                                                window.location.href = data.redirectUrl;
                                            }
                                        });
                                    }

                                    if (data.success) {
                                        const Toast = Swal.mixin({
                                            toast: true,
                                            position: "top-end",
                                            showConfirmButton: false,
                                            timer: 2000,
                                            timerProgressBar: true,
                                            didOpen: (toast) => {
                                                toast.onmouseenter = Swal.stopTimer;
                                                toast.onmouseleave = Swal.resumeTimer;
                                            }
                                        });
                                        Toast.fire({
                                            icon: "success",
                                            title: `SubCategory has been edited`
                                        });
                                        setTimeout(() => {
                                            window.location.reload()
                                        }, 2000)

                                    }

                                    if (data.error) {
                                        Swal.fire({
                                            icon: "error",
                                            title: "Validation Error",
                                            text: data.error,
                                        });
                                    }
                                })
                        }


                        function removeCateogry(ID) {
                            Swal.fire({
                                title: "Are you sure?",
                                text: `Do you want to delete this subCategory`,
                                icon: "warning",
                                showCancelButton: true,
                                confirmButtonColor: "#3085d6",
                                cancelButtonColor: "#d33",
                                confirmButtonText: "Yes"
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    fetch(`/admin/subCategories/${ID}`, {
                                        method: "DELETE",
                                        headers: {
                                            'Content-Type': 'application/json'
                                        }
                                    }).then(res => res.json())
                                        .then((data) => {
                                            if (data.validationError) {
                                                let timerInterval;
                                                Swal.fire({
                                                    title: "Validation Error",
                                                    html: "You will be redirected to login in <b></b> milliseconds.",
                                                    timer: 2000,
                                                    timerProgressBar: true,
                                                    didOpen: () => {
                                                        Swal.showLoading();
                                                        const timer = Swal.getPopup().querySelector("b");
                                                        timerInterval = setInterval(() => {
                                                            timer.textContent = `${Swal.getTimerLeft()}`;
                                                        }, 100);
                                                    },
                                                    willClose: () => {
                                                        clearInterval(timerInterval);
                                                    }
                                                }).then((result) => {
                                                    /* Read more about handling dismissals below */
                                                    if (result.dismiss === Swal.DismissReason.timer) {
                                                        
                                                        window.location.href = data.redirectUrl;
                                                    }
                                                });
                                            }

                                            if (data.error) {
                                                Swal.fire({
                                                    icon: "error",
                                                    title: "Validation Error",
                                                    text: data.error,
                                                });
                                            }

                                            if (data.success) {
                                                Swal.fire({
                                                    title: "Removed!",
                                                    text: "You removed the subCategory",
                                                    icon: "success",
                                                    timer: 2000
                                                });

                                                setTimeout(() => {
                                                    window.location.reload()
                                                }, 2000)

                                            }
                                        })
                                }
                            });

                        }
                    </script>

    </body>

</html>