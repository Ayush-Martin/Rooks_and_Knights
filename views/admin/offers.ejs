<!DOCTYPE html>
<html lang="en">

<%- include('./partials/header') %>

  <body>

    <style>
 /* Custom CSS for Modal */
.modal-content {
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
}

.modal-header {
    background-color: #007bff;
    color: white;
}

.modal-title {
    font-weight: bold;
}

.custom-input {
    border: 1px solid #ced4da;
    border-radius: 5px;
}

.custom-select {
    border-radius: 5px;
}

.add-btn {
    border-radius: 5px;
}

.list-group-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-radius: 5px;
    transition: background-color 0.3s;
}

.list-group-item:hover {
    background-color: #f8f9fa;
}

.btn-success {
    background-color: #28a745;
}

.btn-success:hover {
    background-color: #218838;
}

.btn-danger {
    background-color: #dc3545;
}

.btn-danger:hover {
    background-color: #c82333;
}

.open-modal-btn {
    margin: 20px;
}

.modal-footer {
    display: flex;
    justify-content: space-between;
}

    </style>


    <div class="wrapper">
      <%- include('./partials/slidebar') %>

        <div id="content">
          <div class="container offer-module mt-4">
            <div class="offer-header mb-3">
              <h2 class="admin_title">Offers</h2>
              <div class="container p-b-50">
                <div class="search-bar-container">
                  <!-- Search Form -->
                  <form action="/admin/offers" method="GET" class="search-input-group">
                    <input type="text" id="search-input" name="search" class="form-control search-input"
                      placeholder="<%= searchFilter || " search"%>">
                    <a href="/admin/offers?search=">
                      <button type="button" class="btn-clear" id="clear-btn">
                        <i class="fas fa-times"></i>
                      </button>
                    </a>
                    <button type="submit" class="btn-search">
                      <i class="fas fa-search"></i>
                    </button>
                  </form>

                  

                    <button class="btn-add" data-toggle="modal" data-target="#addProductOfferModal">
                      <i class="fas fa-plus"></i> New product offer
                    </button>
                    
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#offerModal">
                      Create New Offer
                    </button>
                    
                  
                </div>
              </div>
            </div>

            <!-- Tab Content -->
            <div class="tab-content">
              <!-- Product Offer Tab -->
              <div class="tab-pane fade show active" id="product-offer" role="tabpanel">
                
                <div class="table-responsive">
                  <table class="table table-bordered m-t-10">
                    <thead>
                      <tr>
                        <th>Offer Name</th>
                        <th>offerPercentage</th>
                        <th>No of Products</th>
                        <th>No of Categories</th>
                        <th>No of Sub Categories</th>
                        <th>Offer (%)</th>
                        <th></th>
                      </tr>
                    </thead>
                    <tbody>
                      <!-- Example Rows -->
                      <% offerList.forEach((offer)=>{%>
                        <tr>
                          <td><%= offer.offerName %></td>
                          <td><%= offer.offerPercentage %></td>
                          <td><%= offer.applicableProducts.length  %></td>
                          <td><%= offer.applicableCategories.length  %></td>
                          <td><%= offer.applicableSubCategories.length  %></td>
                          <td><%= offer.offerPercentage %></td>
                          <td><%= offer.expiryDate %></td>
                        </tr>
                      <% }) %>

                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>

    </div>


    <!-- Bootstrap Modal (Large) -->
    <div class="modal fade" id="offerModal" tabindex="-1" aria-labelledby="offerModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="offerModalLabel"><i class="fas fa-tags"></i> Create New Offer</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <!-- Top Three Input Boxes -->
            <div class="row">
              <div class="col-md-4 mb-3">
                <label for="offerName" class="form-label"><strong>Offer Name</strong></label>
                <input type="text" class="form-control custom-input" id="offerName" placeholder="Enter offer name">
              </div>
              <div class="col-md-4 mb-3">
                <label for="discountPrice" class="form-label"><strong>Discount Price</strong></label>
                <input type="number" class="form-control custom-input" id="discountPrice" placeholder="Enter discount price">
              </div>
              <div class="col-md-4 mb-3">
                <label for="expiryDate" class="form-label"><strong>Expiry Date</strong></label>
                <input type="date" class="form-control custom-input" id="expiryDate">
              </div>
            </div>
    
            <!-- Select Inputs for Products, Categories, Subcategories -->
            <div class="row mt-4">
              <div class="col-md-4 mb-3">
                <label for="productSelect" class="form-label"><strong>Products</strong></label>
                <div class="input-group">
                  <select class="form-select custom-select" id="productSelect">
                    <option value="Product 1">Product 1</option>
                    <option value="Product 2">Product 2</option>
                    <option value="Product 3">Product 3</option>
                  </select>
                  <button type="button" class="btn btn-success add-btn" id="addProductBtn"><i class="fas fa-plus-circle"></i> Add</button>
                </div>
              </div>
              <div class="col-md-4 mb-3">
                <label for="categorySelect" class="form-label"><strong>Categories</strong></label>
                <div class="input-group">
                  <select class="form-select custom-select" id="categorySelect">
                    <option value="Category 1">Category 1</option>
                    <option value="Category 2">Category 2</option>
                    <option value="Category 3">Category 3</option>
                  </select>
                  <button type="button" class="btn btn-success add-btn" id="addCategoryBtn"><i class="fas fa-plus-circle"></i> Add</button>
                </div>
              </div>
              <div class="col-md-4 mb-3">
                <label for="subcategorySelect" class="form-label"><strong>Subcategories</strong></label>
                <div class="input-group">
                  <select class="form-select custom-select" id="subcategorySelect">
                    <option value="Subcategory 1">Subcategory 1</option>
                    <option value="Subcategory 2">Subcategory 2</option>
                    <option value="Subcategory 3">Subcategory 3</option>
                  </select>
                  <button type="button" class="btn btn-success add-btn" id="addSubcategoryBtn"><i class="fas fa-plus-circle"></i> Add</button>
                </div>
              </div>
            </div>
    
            <!-- Lists to Display Selected Products, Categories, Subcategories -->
            <div class="row mt-4">
              <div class="col-md-4 mb-3">
                <label><strong>Applicable Products</strong></label>
                <ul class="list-group" id="productList"></ul>
              </div>
              <div class="col-md-4 mb-3">
                <label><strong>Applicable Categories</strong></label>
                <ul class="list-group" id="categoryList"></ul>
              </div>
              <div class="col-md-4 mb-3">
                <label><strong>Applicable Subcategories</strong></label>
                <ul class="list-group" id="subcategoryList"></ul>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><i class="fas fa-times"></i> Close</button>
            <button type="button" class="btn btn-primary"><i class="fas fa-save"></i> Save Offer</button>
          </div>
        </div>
      </div>
    </div>


    

    

    <%- include('./partials/footer') %>
  </body>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.7/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.min.js"></script>

  <script>
    // JavaScript for Dynamic Adding, Removing, and Clearing Fields
const availableProducts = ["Product 1", "Product 2", "Product 3"];
const availableCategories = ["Category 1", "Category 2", "Category 3"];
const availableSubcategories = ["Subcategory 1", "Subcategory 2", "Subcategory 3"];

// Function to populate dropdowns
function populateDropdowns() {
  const productSelect = document.getElementById('productSelect');
  const categorySelect = document.getElementById('categorySelect');
  const subcategorySelect = document.getElementById('subcategorySelect');

  productSelect.innerHTML = '';
  availableProducts.forEach(product => {
    const option = document.createElement('option');
    option.value = product;
    option.textContent = product;
    productSelect.appendChild(option);
  });

  categorySelect.innerHTML = '';
  availableCategories.forEach(category => {
    const option = document.createElement('option');
    option.value = category;
    option.textContent = category;
    categorySelect.appendChild(option);
  });

  subcategorySelect.innerHTML = '';
  availableSubcategories.forEach(subcategory => {
    const option = document.createElement('option');
    option.value = subcategory;
    option.textContent = subcategory;
    subcategorySelect.appendChild(option);
  });
}

// Add product to the list and remove from dropdown
document.getElementById('addProductBtn').addEventListener('click', function() {
  const productSelect = document.getElementById('productSelect');
  const selectedProduct = productSelect.value;
  if (selectedProduct) {
    addListItem('productList', selectedProduct, productSelect);
  }
});

// Add category to the list and remove from dropdown
document.getElementById('addCategoryBtn').addEventListener('click', function() {
  const categorySelect = document.getElementById('categorySelect');
  const selectedCategory = categorySelect.value;
  if (selectedCategory) {
    addListItem('categoryList', selectedCategory, categorySelect);
  }
});

// Add subcategory to the list and remove from dropdown
document.getElementById('addSubcategoryBtn').addEventListener('click', function() {
  const subcategorySelect = document.getElementById('subcategorySelect');
  const selectedSubcategory = subcategorySelect.value;
  if (selectedSubcategory) {
    addListItem('subcategoryList', selectedSubcategory, subcategorySelect);
  }
});

// Function to dynamically add list items with a remove button and remove from dropdown
function addListItem(listId, value, selectElement) {
  const list = document.getElementById(listId);
  const listItem = document.createElement('li');
  listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
  listItem.textContent = value;

  // Create remove button with icon
  const removeBtn = document.createElement('button');
  removeBtn.className = 'btn btn-danger btn-sm';
  removeBtn.innerHTML = '<i class="fas fa-trash-alt"></i>';
  removeBtn.addEventListener('click', function() {
    listItem.remove(); // Remove the list item
    const option = document.createElement('option'); // Re-add item to the dropdown
    option.value = value;
    option.textContent = value;
    selectElement.appendChild(option);
  });

  // Append remove button to the list item
  listItem.appendChild(removeBtn);
  list.appendChild(listItem); // Add the item to the list

  // Remove selected item from dropdown
  Array.from(selectElement.options).forEach(option => {
    if (option.value === value) {
      option.remove();
    }
  });
}

// Clear the modal fields when the modal is closed
document.getElementById('offerModal').addEventListener('hidden.bs.modal', function () {
  document.getElementById('offerName').value = '';
  document.getElementById('discountPrice').value = '';
  document.getElementById('expiryDate').value = '';
  clearList('productList', document.getElementById('productSelect'));
  clearList('categoryList', document.getElementById('categorySelect'));
  clearList('subcategoryList', document.getElementById('subcategorySelect'));
  populateDropdowns(); // Repopulate dropdowns with available options
});

// Clear list items and re-populate dropdowns
function clearList(listId, selectElement) {
  const list = document.getElementById(listId);
  list.innerHTML = ''; // Clear the list
  Array.from(selectElement.querySelectorAll('option')).forEach(option => {
    option.selected = false; // Deselect all options
  });
}

// Initial population of dropdowns when the page loads
populateDropdowns();

  </script>
</html>