<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('./partials/head.ejs') %>
</head>

<body class="">

    <!-- Header -->
    <header class="header-v4">
        <%- include('./partials/header.ejs') %>
    </header>

    <div class="main-container">
        <div class="profile-card">
            <div class="profile-header">
                <div class="d-flex align-items-center">
                    <div>
                        <% if(userProfile.profilePicture) {%>
                            <img src="<% userProfile.profilePicture %>" alt="">
                            <% }else{ %>
                                <i class="fa fa-user-circle fa-3x m-r-20" aria-hidden="true"></i>
                                <% } %>
                    </div>

                    <div>
                        <h5>
                            <%= userProfile.username %>
                        </h5>
                        <p>
                            <%= userProfile.email %>
                        </p>
                    </div>
                </div>
                <div>
                    <button class="btn btn-dark btn-sm"><i class="fa fa-edit"></i> Edit</button>
                    <button class="btn btn-danger btn-sm"><i class="fa fa-trash"></i> Remove</button>
                    <button class="btn btn-success btn-sm" onclick="logout()"><i class="fa fa-sign-out-alt"></i>
                        Logout</button>
                </div>
            </div>


            <div class="profile-body">
                <form onsubmit="updateProfile(event) ">
                    <div class="form-row">
                        <div class="col-md-6 mb-3">
                            <label for="username">Username</label>
                            <input type="text" class="form-control" id="username" name="username"
                                value="<%= userProfile.username %>">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="email">Email address</label>
                            <input type="email" class="form-control" id="email" value="<%= userProfile.email %>"
                                readonly>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="phoneNumber">Phone Number</label>
                        <input type="text" class="form-control" id="phoneNumber" value="<%= userProfile.phoneNumber %>">
                    </div>

                    <button type="submit" class="btn btn-primary">Save</button>
                </form>
                <button onclick="changePassword()" class="d-block mb-3">Change password?</button>
            </div>
        </div>

        <!-- Address Section -->
        <div class="address-card">
            <div class="card-header text-center">
                <h5 class="mb-0 mtext-113">Shipping Address</h5>
            </div>
            <div class="card-body">
                <% address.address.forEach((addressItem)=>{ %>
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <div>
                            <p class="mtext-112 size-40">
                                <%= addressItem.addressTitle %>
                            </p>
                            <p class="mb-0 mtext-101 size-10">State: <%= addressItem.state %>, City: <%=
                                        addressItem.city %>, PIN Code: <%= addressItem.pinCode %>
                            </p>
                            <p class="mb-0 mtext-101 size-10">Street Address: <%= addressItem.streetAddress %>
                            </p>
                        </div>
                        <div>
                            <button class="btn btn-dark btn-sm m-b-3"
                                data-address-item="<%= JSON.stringify(addressItem)%>" onclick="editAddressModel(event,'<%=addressItem._id%>')"
                                data-toggle="modal" data-target="#editAddressModel">
                                <i class="fa fa-edit"></i>Edit
                            </button>

                            <button class="btn btn-danger btn-sm  m-b-3"
                                onclick="removeAddress(event,'<%=addressItem._id%>')"><i
                                    class="fa fa-trash"></i>Remove</button>
                        </div>
                    </div>
                    <hr>
                    <% })%>

                        <button class="btn btn-primary" data-toggle="modal" data-target="#addAddressModel"><i
                                class="fa fa-plus"></i> Add New Address</button>
            </div>
        </div>

        <!-- Orders Section -->

        <div class="order-card">
            <div class="card-header text-center">
                <h5 class="mb-0 mtext-113">My Orders</h5>
            </div>
            <!-- Add a wrapper div around the table -->
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th scope="col">Product</th>
                            <th scope="col"></th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Amount</th>
                            <th scope="col">Status</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="chessbase17.jpg" alt="Chessbase 17" class="img-thumbnail"
                                        style="width: 70px; height: 70px; margin-right: 10px;">
                                </div>
                            </td>
                            <td>Chessbase 17</td>
                            <td>15</td>
                            <td>$36.00</td>
                            <td>Pending</td>
                            <td><button class="btn btn-sm btn-danger">Cancel</button></td>
                        </tr>
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="mega_database_2024.jpg" alt="Mega Database 2024" class="img-thumbnail"
                                        style="width: 70px; height: 70px; margin-right: 10px;">
                                </div>
                            </td>
                            <td>Mega Database 2024</td>
                            <td>15</td>
                            <td>$16.00</td>
                            <td>Delivered</td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>

        </div>

    </div>



    <!-- modal to add new address -->
    <div class="modal fade m-t-50" id="addAddressModel" tabindex="-2" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">New Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="addressTitle" class="col-form-label">Address Title</label>
                            <input type="text" class="form-control" id="addressTitle">
                        </div>
                        <div class="form-group">
                            <label for="state" class="col-form-label">State</label>
                            <input type="text" class="form-control" id="state">
                        </div>
                        <div class="form-group">
                            <label for="city" class="col-form-label">City</label>
                            <input type="text" class="form-control" id="city">
                        </div>
                        <div class="form-group">
                            <label for="pinCode" class="col-form-label">Pin Code</label>
                            <input type="text" class="form-control" id="pinCode">
                        </div>
                        <div class="form-group">
                            <label for="streetAddress" class="col-form-label">Street Addrress</label>
                            <textarea class="form-control" id="streetAddress"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="addNewAddress(event)">Add</button>
                </div>
            </div>
        </div>
    </div>



    <!-- modal to edit address -->
    <div class="modal fade m-t-50" id="editAddressModel" tabindex="-2" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Edit Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="addressTitle" class="col-form-label">Address Title</label>
                            <input type="text" class="form-control" id="addressTitleEdit">
                        </div>
                        <div class="form-group">
                            <label for="state" class="col-form-label">State</label>
                            <input type="text" class="form-control" id="stateEdit">
                        </div>
                        <div class="form-group">
                            <label for="city" class="col-form-label">City</label>
                            <input type="text" class="form-control" id="cityEdit">
                        </div>
                        <div class="form-group">
                            <label for="pinCode" class="col-form-label">Pin Code</label>
                            <input type="text" class="form-control" id="pinCodeEdit">
                        </div>
                        <div class="form-group">
                            <label for="streetAddress" class="col-form-label">Street Addrress</label>
                            <textarea class="form-control" id="streetAddressEdit"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer" id="editAddressDiv">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>




    <!-- Footer -->
    <footer class="bg3 p-t-75 p-b-32">
        <%- include('./partials/footer.ejs') %>
    </footer>


    <%- include('./partials/backToTop.ejs') %>


        <%- include('./partials/scriptBody.ejs') %>

            <script>
                function logout() {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You won't be able to revert this!",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes,Logout!"
                    }).then((result) => {
                        if (result.isConfirmed) {

                            fetch('/user/logout', {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                            }).then((res) => res.json())
                                .then((data) => {
                                    if (data.success) {
                                        Swal.fire({
                                            title: "Loged Out",
                                            icon: "success",
                                            timer: 2000
                                        });
                                        setTimeout(() => {
                                            window.location.href = data.successRedirect;
                                        }, 2000)
                                    }
                                })

                        }
                    });
                }


                function updateProfile(event) {
                    event.preventDefault()
                    let username = document.getElementById('username').value;
                    let phoneNumber = document.getElementById('phoneNumber').value;
                    fetch('/user/account/updateProfile', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ username, phoneNumber })
                    })
                        .then(res => res.json())
                        .then((data) => {
                            if (data.success) {
                                Swal.fire({
                                    title: "Updated",
                                    text: "Your cart has been updated",
                                    icon: "success",
                                    timer: 2000
                                });
                                setTimeout(() => {
                                    window.location.reload();
                                }, 2000)
                            } else if (data.error) {
                                Swal.fire({
                                    title: "Not updated",
                                    text: data.error,
                                    icon: "error",
                                    timer: 2000
                                })
                                setTimeout(() => {
                                    window.location.reload();
                                }, 2000)
                            } else if (data.authError) {
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: data.authError,
                                    footer: data.errorRedirect
                                });
                            }
                        })
                        .catch(err => console.log(err))
                }

                function changePassword() {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You must verify OTP to change password",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes"
                    }).then((result) => {
                        if (result.isConfirmed) {

                            fetch('/user/account/changePassword', {
                                method: "POST",
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                            }).then((res) => res.json())
                                .then((data) => {
                                    if (data.redirectUrl) {
                                        window.location.href = data.redirectUrl;
                                    }
                                })

                        }
                    });
                }

                function addNewAddress(event) {
                    event.preventDefault()

                    let addressTitle = document.getElementById('addressTitle').value;
                    let state = document.getElementById('state').value;
                    let city = document.getElementById('city').value;
                    let pinCode = document.getElementById('pinCode').value;
                    let streetAddress = document.getElementById('streetAddress').value;

                    fetch('/address/add', {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ addressTitle, state, city, pinCode, streetAddress })
                    })
                        .then((res) => res.json())
                        .then((data) => {
                            if (data.success) {
                                Swal.fire({
                                    title: "Added",
                                    text: "New Address Added",
                                    icon: "success",
                                    timer: 2000
                                });
                                setTimeout(() => {
                                    window.location.reload();
                                }, 2000)
                            }
                        })
                }

                function editAddress(event, _id) {
                    event.preventDefault()

                    let addressTitle = document.getElementById('addressTitleEdit').value;
                    let state = document.getElementById('stateEdit').value;
                    let city = document.getElementById('cityEdit').value;
                    let pinCode = document.getElementById('pinCodeEdit').value;
                    let streetAddress = document.getElementById('streetAddressEdit').value;
                    console.log(addressTitle,state,city);
                    
                    fetch(`/address/edit/${_id}`, {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ addressTitle, state, city, pinCode, streetAddress })
                    })
                        .then((res) => res.json())
                        .then((data) => {
                            if (data.success) {
                                Swal.fire({
                                    title: "Edited",
                                    text: "Address has been edited",
                                    icon: "success",
                                    timer: 2000
                                });
                                setTimeout(() => {
                                    window.location.reload();
                                }, 2000)
                            }
                        })
                }

                function removeAddress(event, ID) {
                    console.log("dfdfdf");

                    event.preventDefault()
                    Swal.fire({
                        title: "Are you sure?",
                        text: "You must verify OTP to change password",
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#3085d6",
                        cancelButtonColor: "#d33",
                        confirmButtonText: "Yes"
                    }).then((result) => {
                        if (result.isConfirmed) {

                            fetch(`/address/delete/${ID}`, {
                                method: "DELETE",
                                headers: {
                                    'Content-Type': 'application/json',
                                }
                            })
                                .then((res) => res.json())
                                .then((data) => {
                                    if (data.success) {
                                        Swal.fire({
                                            title: "Deleted",
                                            text: "Address has been deleted",
                                            icon: "success",
                                            timer: 2000
                                        });
                                        setTimeout(() => {
                                            window.location.reload();
                                        }, 2000)
                                    }
                                })
                        }
                    });
                }



                function editAddressModel(e, _id) {
                    const addressdata = e.target;
                    const { addressTitle, state, city, pinCode, streetAddress } = JSON.parse(addressdata.getAttribute('data-address-item'));
                    document.getElementById('addressTitleEdit').value = addressTitle;
                    document.getElementById('stateEdit').value = state;
                    document.getElementById('cityEdit').value = city;
                    document.getElementById('pinCodeEdit').value = pinCode;
                    document.getElementById('streetAddressEdit').value = streetAddress;

                    // Get the parent div where the button should be appended
                    const editAddressDiv = document.getElementById('editAddressDiv');

                    // Check if the edit button already exists
                    if (!document.getElementById('editAddressButton')) {
                        var editButton = document.createElement('button');
                        editButton.textContent = "Edit";
                        editButton.id = 'editAddressButton'; 
                        editButton.onclick = () => editAddress(event, _id);
                        editButton.classList.add('btn', 'btn-primary');

                        editAddressDiv.appendChild(editButton);
                    }
                }

            </script>
</body>

</html>